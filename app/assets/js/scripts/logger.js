const os=require("os");var fs=require("fs");const path=require("path"),rootPath=require("electron-root-path").rootPath;var writeStream=void 0,options={year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"};function start(){writeStream=fs.createWriteStream(path.join(rootPath,"debug.log")),writeStream.write(`arch:${os.arch()}\r\ncpus:${os.cpus()[0].model}\r\nmem:${(os.freemem()/1073741824).toFixed(1)}/${(os.totalmem()/1073741824).toFixed(1)}GB\r\nos:${os.type()}\r\nrelease:${os.release()}\r\nhomedir:${os.homedir()}`)}function addLine(){let a=document.getElementsByTagName("logger")[0].children[1];a.innerHTML+=`<span style="color:limegreen;">=========================</span><br>`}function ok(a,b){let c=document.getElementsByTagName("logger")[0].children[1];addLine(c),c.innerHTML+=`<span style="color:limegreen;word-wrap: break-word;">-[ ${a} ] ${b}</span><br>`,writeStream.write(`\r\n[ ${new Date().toLocaleString("ru",options)} ][ ${a} ] ${b}`)}function warn(a,b){let c=document.getElementsByTagName("logger")[0].children[1];addLine(c),c.innerHTML+=`<span style="color:yellow;word-wrap: break-word;">-[ ${a} ] ${b}</span><br>`,writeStream.write(`\r\n[ ${new Date().toLocaleString("ru",options)} ][ ${a} ] ${b}`)}function error(a,b){let c=document.getElementsByTagName("logger")[0].children[1];addLine(c),c.innerHTML+=`<span style="color:red;word-wrap: break-word;">-[ ${a} ] ${b}</span><br>`,writeStream.write(`\r\n[ ${new Date().toLocaleString("ru",options)} ][ ${a} ] ${b}`)}function clear(){document.getElementsByTagName("logger")[0].children[1].innerHTML=""}function log(a){console.log(a),writeStream.write(`\r\n[ ${new Date().toLocaleString("ru",options)} ] ${a}`)}module.exports.ok=ok,module.exports.clear=clear,module.exports.warn=warn,module.exports.error=error,module.exports.log=log,module.exports.start=start;
